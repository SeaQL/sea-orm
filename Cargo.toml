[workspace]
members = [
    ".",
    "sea-orm-macros",
    "examples/sqlx-mysql",
]

[package]
name = "sea-orm"
version = "0.1.0"
authors = [ "Chris Tsang <tyt2y7@gmail.com>" ]
edition = "2018"
description = "üêö An async ORM for Rust"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/sea-orm"
repository = "https://github.com/SeaQL/sea-orm"
categories = [ "database" ]
keywords = [ "orm", "database", "sql", "mysql", "postgres", "sqlite" ]
publish = false

[lib]
name = "sea_orm"
path = "src/lib.rs"

[dependencies]
async-trait = "^0.1"
futures = { version = "^0.3" }
sea-query = { path = "../sea-query", version = "^0.12" }
sea-orm-macros = { path = "sea-orm-macros", optional = true }
# sea-schema = { path = "../sea-schema" }
serde = { version = "^1.0", features = [ "derive" ] }
sqlx = { version = "^0.5", optional = true }
strum = { version = "^0.20", features = [ "derive" ] }
serde_json = { version = "^1", optional = true }
async-stream = { version = "^0.3" }
futures-util = { version = "^0.3" }

[features]
debug-print = []
default = [ "macros", "sqlx-mysql", "runtime-async-std-native-tls", "with-json" ]
macros = [ "sea-orm-macros" ]
with-json = [ "serde_json" ]
sqlx-dep = [ "sqlx" ]
sqlx-mysql = [ "sqlx-dep", "sea-query/sqlx-mysql", "sqlx/mysql" ]
sqlx-postgres = [ "sqlx-dep", "sea-query/sqlx-postgres", "sqlx/postgres" ]
runtime-actix-native-tls = [ "sqlx/runtime-actix-native-tls" ]
runtime-async-std-native-tls = [ "sqlx/runtime-async-std-native-tls" ]
runtime-tokio-native-tls = [ "sqlx/runtime-tokio-native-tls" ]
runtime-actix-rustls = [ "sqlx/runtime-actix-rustls" ]
runtime-async-std-rustls = [ "sqlx/runtime-async-std-rustls" ]
runtime-tokio-rustls = [ "sqlx/runtime-tokio-rustls" ]